#!/bin/ksh

# $Id: styping.sh,v 1.7 2018/11/19 12:16:58 hajime Exp $

# styping.sh - a simple typing script.
#
# Author: Hajime Edakawa <hajime.edakawa@gmail.com>
# License: Public Domain
# Last Update: Nov, 2018

# RANK
# ------------- -------
# TITLE         POINTS
# ------------- -------
# Puffy         800-
# Legend        768-799
# Demigod       736-767
# Sleipnir      704-735
# Meteor        672-703
# Railgun       640-671
# RocketBooster 608-639
# Wizard        576-607
# Hacker        544-575
# UsainBolt     512-543
# Ninja         480-511
# Falcon        448-479
# Master        416-447
# S++           384-415
# S+            352-383
# S             320-351
# A+            288-319
# A             256-287
# B+            224-255
# B             192-223
# C+            160-191
# C             128-159
# D+             96-127
# D              64-95
# E+             32-63
# E               0-31

#------------------------------------------------------------------------------
set -A words "A goal without a plan is just a wish."                        \
             "You have to study a great deal to know a little."             \
             "There is always light behind the clouds."                     \
             "He who moves not forward, goes backward."                     \
             "Imagination means nothing without doing."                     \
             "Make the most of yourself, for that is all there is of you."  \
             "The roots of education are bitter, but the fruit is sweet."   \
             "Nothing is a waste of time if you use the experience wisely." \
             "Victory belongs to the most persevering."                     \
             "The optimist sees the doughnut, the pessimist sees the hole." \
             "Indecision is often worse than wrong action."                 \
             "Don't find fault, find a remedy; anybody can complain."       \
             "Never leave that till tomorrow which you can do today."       \
             "Pleasure in the job puts perfection in the work."             \
             "Quality means doing it right when no one is looking."         \
             "The beginning is the most important part of the work."        \
             "Laziness may appear attractive, but work gives satisfaction." \
             "Work is a necessity for man. Man invented the alarm clock."   \
             "I am not young enough to know everything."                    \
             "It takes a long time to grow young."                          \
             "In order to write about life, first you must live it!"        \
             "It is not length of life, but depth of life."                 \
             "Whether you believe you can do a thing or not, you are right."
#-------------------------------------------------------------------------------
function usage {
	echo "usage: ${progname} -q [-n number]\r"
	exit 1
}

function restore_stty_state {
	stty ${_STTYSTATE}
	tput cnorm
}
#-------------------------------------------------------------------------------
bc |&
function start_sw {
	_BEGIN=$(perl -MTime::HiRes=gettimeofday -e \
	    '($sec,$micro)=gettimeofday; print sprintf("%d%06d",$sec,$micro);')
}
function stop_sw {
	_END=$(perl -MTime::HiRes=gettimeofday -e \
            '($sec,$micro)=gettimeofday; print sprintf("%d%06d",$sec,$micro);')
}
function calc_time {
	print -p "scale=2;(${_END}-${_BEGIN})/1000000"
	read -p _TIME
}
function inc_keyhit {
	(( _HIT++ ))
}
function inc_keymiss {
	(( _MISS++ ))
}
function calc_wpm {
	print -p "scale=2;(${_HIT}+${_MISS})/${_TIME}*60"
	read -p _WPM
}
function calc_epm {
	print -p "scale=2;${_MISS}/${_TIME}*60"
	read -p _EPM
}
function calc_rate {
	print -p "scale=2;${_HIT}/(${_HIT}+${_MISS})"
	read -p _RATE
}
function calc_accuracy {
	print -p "scale=2;${_RATE}*100"
	read -p _ACCURACY
}
function calc_point {
	print -p "${_WPM}*${_RATE}*${_RATE}*${_RATE}"
	read -p _POINT
}
function calc_rank {
	local p=$(printf "%.0f" ${_POINT})
	(( 800 <= p )) && _RANK="Puffy"         && return
	(( 768 <= p )) && _RANK="Legend"        && return
	(( 736 <= p )) && _RANK="Demigod"       && return
	(( 704 <= p )) && _RANK="Sleipnir"      && return
	(( 672 <= p )) && _RANK="Meteor"        && return
	(( 640 <= p )) && _RANK="Railgun"       && return
	(( 608 <= p )) && _RANK="RocketBooster" && return
	(( 576 <= p )) && _RANK="Wizard"        && return
	(( 544 <= p )) && _RANK="Hacker"        && return
	(( 512 <= p )) && _RANK="UsainBolt"     && return
	(( 480 <= p )) && _RANK="Ninja"         && return
	(( 448 <= p )) && _RANK="Falcon"        && return
	(( 416 <= p )) && _RANK="Master"        && return
	(( 384 <= p )) && _RANK="S++"           && return
	(( 352 <= p )) && _RANK="S+"            && return
	(( 320 <= p )) && _RANK="S"             && return
	(( 288 <= p )) && _RANK="A+"            && return
	(( 256 <= p )) && _RANK="A"             && return
	(( 224 <= p )) && _RANK="B+"            && return
	(( 192 <= p )) && _RANK="B"             && return
	(( 160 <= p )) && _RANK="C+"            && return
	(( 128 <= p )) && _RANK="C"             && return
	((  96 <= p )) && _RANK="D+"            && return
	((  64 <= p )) && _RANK="D"             && return
	((  32 <= p )) && _RANK="E+"            && return
	((   0 <= p )) && _RANK="E"             && return
}
function show_score {
	local line="$1"

	tput cup $line 0 && (( line++ ))
	printf "%s" $(perl -E 'say "-" x 80')
	tput cup $line 0 && (( line++ ))
	printf "SCORE\t\t%.0f point" ${_POINT}
	tput cup $line 0 && (( line++ ))
	printf "RANK\t\t%s" ${_RANK}
	tput cup $line 0 && (( line++ ))
	printf "TIME\t\t%.2f sec" ${_TIME}
	tput cup $line 0 && (( line++ ))
	printf "HIT\t\t%d" ${_HIT}
	tput cup $line 0 && (( line++ ))
	printf "MISS\t\t%d" ${_MISS}
	tput cup $line 0 && (( line++ ))
	printf "ACCURACY\t%.1f%%" ${_ACCURACY}
	tput cup $line 0 && (( line++ ))
	printf "WPM\t\t%.1f" ${_WPM}
	tput cup $line 0 && (( line++ ))
	printf "EPM\t\t%.1f" ${_EPM}
}
#-------------------------------------------------------------------------------
function main {
	integer num=5
	integer i
	local hist	
	local quit=0

	while getopts :n:q opt; do
		case ${opt} in
			n) num="$OPTARG" ;;
			q) quit=1        ;;
			*) usage         ;;
		esac
	done
	shift $(( OPTIND-1 ))

	if [[ ${quit} == 0 ]]; then
		clear
		for i in 3 2 1; do
			tput cup 0 0
			print "# key to exit / ${i}..."
			sleep 1
		done
	fi

	clear
	start_sw
	for i in $(jot $num); do
		local word="${words[RANDOM%${#words[*]}]}"
		local ch
		local len
		hist[${#hist[*]}]="${word}"
		while (( ${#word} > 0 )); do
			clear
			tput cup 0 0
			printf "[%2d/%2d] :$word" ${i} ${num}
			ch=$(dd bs=1 count=1 2>/dev/null)
			[[ $ch == "#" ]] && return
			len=${#word}
			word=${word#$ch}
			(( ${#word} == 0 )) && inc_keyhit && break
			if (( len != ${#word} )); then
				inc_keyhit
			else
				inc_keymiss
			fi
		done
	done
	stop_sw

	clear
	for i in $(jot ${#hist[*]} 0); do
		tput cup ${i} 0
		printf "[%2d/%2d] %s" $(( i + 1 )) $num "${hist[i]}"
	done

	calc_time
	calc_wpm
	calc_epm
	calc_rate
	calc_accuracy
	calc_point
	calc_rank
	show_score ${#hist[*]}

	print "\r"
}
#-------------------------------------------------------------------------------
_BEGIN=false
_END=false
_SCORE=false
_RANK=false
_TIME=false
_HIT=0
_MISS=0
_ACCURACY=false
_WPM=false
_EPM=false
_RATE=false

_STTYSTATE=$(stty -g)
readonly _STTYSTATE

progname=$(basename $0)
#-------------------------------------------------------------------------------
trap restore_stty_state EXIT

stty raw
tput civis

main "$@"
#-------------------------------------------------------------------------------
